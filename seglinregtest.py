import logging
import unittest
import numpy

import seglinreg


logging.basicConfig(format='%(asctime)s\t%(message)s', level=logging.INFO)


class SegLinRegTestCase(unittest.TestCase):
    def test_something(self):
        obj = seglinreg.SegLinReg(int(numpy.random.sample() * 5) + 2)

        normal = numpy.random.standard_normal(1 + numpy.random.sample() * 1000)

        data = []
        n = 0
        for val in normal:
            n += numpy.random.sample()
            data.append((n, val))

        data.append((n + 1, None))
        data.append((n + 2, None))
        data.append((n + 3, None))

        chunks = obj.calculate(data)
        logging.info("Result: %s", chunks)
        logging.info("Result data: %s", [val for val in chunks.get_regression_data()])

    def test_real1(self):
        test1 = [(0, 506224.0), (1, 535982.0), (2, 534981.0), (3, 542664.0), (4, 547944.0), (5, 541522.0),
                 (6, 536643.0), (7, 536203.0), (8, 521291.0), (9, 510602.0), (10, 508576.0), (11, 496740.0),
                 (12, 495249.0), (13, 491789.0), (14, 482204.0), (15, 468571.0), (16, 458209.0), (17, 432852.0),
                 (18, 433511.0), (19, 429606.0), (20, 398854.0), (21, None), (22, None), (23, None)]
        obj = seglinreg.SegLinReg(7)
        res = obj.calculate(test1)

    def test_real2(self):
        test1 = [(0, 7238.0), (1, 7734.0), (2, 7555.0), (3, 7242.0), (4, 7495.0), (5, 7701.0), (6, 7222.0), (7, 7438.0), (8, 7865.0), (9, 7620.0), (10, 7233.0), (11, 6561.0), (12, 6832.0), (13, 6531.0), (14, 6462.0), (15, 6015.0), (16, 6461.0), (17, 6430.0), (18, 6240.0), (19, 5911.0), (20, 5652.0), (21, 5484.0), (22, 5528.0), (23, 5095.0), (24, 5284.0), (25, 5386.0), (26, 5286.0), (27, 5250.0), (28, 5178.0), (29, 5260.0), (30, 5152.0), (31, 5323.0), (32, 5313.0), (33, 5578.0), (34, 5073.0), (35, 5385.0), (36, 5201.0), (37, 5255.0), (38, 4941.0), (39, 4897.0), (40, 4953.0), (41, 4987.0), (42, 4867.0), (43, 4909.0), (44, 4875.0), (45, 4936.0), (46, 4914.0), (47, 5125.0), (48, 5215.0), (49, 5041.0), (50, 4998.0), (51, 5072.0), (52, 4971.0), (53, 4971.0), (54, 5168.0), (55, 4947.0), (56, 5016.0), (57, 5298.0), (58, 5392.0), (59, 5241.0), (60, 4945.0), (61, 5165.0), (62, 5138.0), (63, 5279.0), (64, 5247.0), (65, 5272.0), (66, 5150.0), (67, 4918.0), (68, 4940.0), (69, 4934.0), (70, 4995.0), (71, 5036.0), (72, 4926.0), (73, 4992.0), (74, 4807.0), (75, 4780.0), (76, 4969.0), (77, 5127.0), (78, 4838.0), (79, 4675.0), (80, 4620.0), (81, 4506.0), (82, 4660.0), (83, 4595.0), (84, 4752.0), (85, 4742.0), (86, 4525.0), (87, 4582.0), (88, 4835.0), (89, 4752.0), (90, 4805.0), (91, 4856.0), (92, 4898.0), (93, 4927.0), (94, 4985.0), (95, 5054.0), (96, 5028.0), (97, 4896.0), (98, 5015.0), (99, 5138.0), (100, 5041.0), (101, 5330.0), (102, 5611.0), (103, 5630.0), (104, 5620.0), (105, 5633.0), (106, 5633.0), (107, 5650.0), (108, 5413.0), (109, 5332.0), (110, 5331.0), (111, 5231.0), (112, 5215.0), (113, 5050.0), (114, 5093.0), (115, 4798.0), (116, 4887.0), (117, 4800.0), (118, 4622.0), (119, 4331.0), (120, 4528.0), (121, 4247.0), (122, 4563.0), (123, 4488.0), (124, 4367.0), (125, 4164.0), (126, 4137.0), (127, 3957.0), (128, 3804.0), (129, 3686.0), (130, 3780.0), (131, 3712.0), (132, 3729.0), (133, 3686.0), (134, 3650.0), (135, 3632.0), (136, 3598.0), (137, 3614.0), (138, 3577.0), (139, 3606.0), (140, 3610.0), (141, 3613.0), (142, 3659.0), (143, 3689.0), (144, 3704.0), (145, 3832.0), (146, 3859.0), (147, 3956.0), (148, 3935.0), (149, 3895.0), (150, 3903.0), (151, 3813.0), (152, 3749.0), (153, 3705.0), (154, 3700.0), (155, 3622.0), (156, 3624.0), (157, 3606.0), (158, 3572.0), (159, 3542.0), (160, 3518.0), (161, 3531.0), (162, 3541.0), (163, 3522.0), (164, 3552.0), (165, 3565.0), (166, 3513.0), (167, 3556.0), (168, 3524.0), (169, 3528.0), (170, 3549.0), (171, 3518.0), (172, 3508.0), (173, 3470.0), (174, 3500.0), (175, 3505.0), (176, 3482.0), (177, 3482.0), (178, 3495.0), (179, 3453.0), (180, 3459.0), (181, 3489.0), (182, 3448.0), (183, 3435.0), (184, 3442.0), (185, 3457.0), (186, 3439.0), (187, 3414.0), (188, 3412.0), (189, 3424.0), (190, 3441.0), (191, 3435.0), (192, 3434.0), (193, 3430.0), (194, 3418.0), (195, 3422.0), (196, 3419.0), (197, 3447.0), (198, 3421.0), (199, 3432.0), (200, 3434.0), (201, 3411.0), (202, 3412.0), (203, 3428.0), (204, 3415.0), (205, 3393.0), (206, 3414.0), (207, 3402.0), (208, 3411.0), (209, 3399.0), (210, 3409.0), (211, 3438.0), (212, 3432.0), (213, 3419.0), (214, 3419.0), (215, 3417.0), (216, 3413.0), (217, 3425.0), (218, 3440.0), (219, 3403.0), (220, 3403.0), (221, 3391.0), (222, 3411.0), (223, 3423.0), (224, 3420.0), (225, 3425.0), (226, 3397.0), (227, 3432.0), (228, 3442.0), (229, 3469.0), (230, 3463.0), (231, 3470.0), (232, 3513.0), (233, 3488.0), (234, 3528.0), (235, 3557.0), (236, 3605.0), (237, 3614.0), (238, 3638.0), (239, 3655.0), (240, 3760.0), (241, 3951.0), (242, 4020.0), (243, 4219.0), (244, 4362.0), (245, 4626.0), (246, 4839.0), (247, 5093.0), (248, 5132.0), (249, 5275.0), (250, 5413.0), (251, 5532.0), (252, 5902.0), (253, 6009.0), (254, 6229.0), (255, 5939.0), (256, 6290.0), (257, 6208.0), (258, 6425.0), (259, 6686.0), (260, 6756.0), (261, 6749.0), (262, 6889.0), (263, 7148.0), (264, 7194.0), (265, 7565.0), (266, 7383.0), (267, 7609.0), (268, 7658.0), (269, 7527.0), (270, 7589.0), (271, 7660.0), (272, 7893.0), (273, 7981.0), (274, 7857.0), (275, 7753.0), (276, 7798.0), (277, 7620.0), (278, 7598.0), (279, 7522.0), (280, 7806.0), (281, 7288.0), (282, 7288.0), (283, 7484.0), (284, 7685.0), (285, 7649.0), (286, 7607.0)]
        obj = seglinreg.SegLinReg(2)
        res = obj.calculate(test1)


if __name__ == '__main__':
    unittest.main()
